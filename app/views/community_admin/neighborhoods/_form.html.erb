<style>
  .has-fixed-footer {
    margin-bottom: 70px;
  }

  .fixed-footer {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 3;
  }
</style>

<%
  method, path, confirm, cancel_path =
    if @neighborhood.new_record?
      [
        :post, community_admin_neighborhoods_path,
        "Créer le voisinage",
        community_admin_neighborhoods_path
      ]
    else
      [
        :put, community_admin_neighborhood_path(@neighborhood),
        "Enregister les modifications",
        community_admin_neighborhood_path(@neighborhood)
      ]
    end
%>
<div class="container mt-5 has-fixed-footer">
  <div class="row justify-content-md-center">
    <%= form_for @neighborhood, url: path, method: method,
            html: {class: "col-8"} do |f| %>
      <div class="d-flex flex-nowrap mb-4">
        <div class="flex-grow-1">
          <div class="form-group">
            <%= f.label :title, "Nom" %>
            <%= f.text_field :title, class: "form-control", required: true %>
          </div>

          <div class="form-group">
            <label for="neighborhood_address">
              Localisation
            </label>
            <%= text_field_tag nil, @neighborhood.metadata[:address],
                id: :neighborhood_address,
                class: "form-control",
                required: true,
                data: { last_valid: @neighborhood.metadata[:address] } %>
            <small class="form-text text-muted">Cette adresse précise n'est pas montrée mais elle permet l'affichage sur la carte.</small>
            <%= hidden_field_tag 'entourage[latitude]', nil, disabled: true %>
            <%= hidden_field_tag 'entourage[longitude]', nil, disabled: true %>
            <%= hidden_field_tag 'entourage[country]', nil, disabled: true %>
            <%= hidden_field_tag 'entourage[postal_code]', nil, disabled: true %>
            <%= hidden_field_tag 'entourage[metadata][address]', nil, disabled: true %>
            <%= hidden_field_tag 'entourage[metadata][google_place_id]', nil, disabled: true %>
          </div>

          <div class="form-group">
            <%= f.label :description %>
            <small class="text-muted">(facultatif)</small>
            <%= f.text_area :description, class: "form-control" %>
          </div>
        </div>
      </div>

      <div class="fixed-footer p-3 bg-light d-flex justify-content-end">
        <a href="<%= cancel_path %>" class="btn btn-outline-secondary mr-3">Annuler</a>
        <button type="submit" class="btn btn-success"><%= confirm %></button>
      </div>
    <% end %>
  </div>
</div>

<% content_for :scripts do %>
  <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_FRONTEND_API_KEY'] %>&libraries=places&region=fr&language=fr"></script>

  <script>
    function generateDisplayAddress(place) {
      var addressFragments = place.formatted_address.split(', ');
      if (place.name !== addressFragments[0]) {
        addressFragments.unshift(place.name);
      }
      if (addressFragments[addressFragments.length - 1] === 'France') {
        addressFragments.pop();
      }
      return addressFragments.join(', ');
    }

    var input = document.getElementById('neighborhood_address');
    var $input = $(input);
    var options = {
      types: ['geocode'],
      fields: ['name', 'place_id', 'geometry.location', 'formatted_address', 'address_components'],
      componentRestrictions: {country: ['fr']}
    };

    autocomplete = new google.maps.places.Autocomplete(input, options);
    autocomplete.addListener('place_changed', function() {
      var place = this.getPlace();

      if (typeof place.place_id === 'undefined') {
        $input.removeClass('is-valid').addClass('is-invalid');
        $input.siblings('input[type=hidden]').prop('disabled', true);
      }
      else {
        $input.data('last-valid', $input.val());
        $input.removeClass('is-invalid').addClass('is-valid');
        $input.siblings('input[type=hidden]').prop('disabled', true);
        var details = {
          google_place_id: place.place_id,
          latitude: place.geometry.location.lat(),
          longitude: place.geometry.location.lng(),
          address: generateDisplayAddress(place),
        };
        var component;
        for (var i in place.address_components) {
          component = place.address_components[i];

          if (component.types.indexOf('country') !== -1) {
            details.country = component.short_name;
          }
          else if (component.types.indexOf('postal_code') !== -1) {
            details.postal_code = component.short_name;
          }
        }
        for (var attribute in details) {
          $input.siblings('input[type=hidden][name*="[' + attribute + ']"]')
            .prop('disabled', false)
            .val(details[attribute]);
        }
      }
    });

    $input.on('blur', function() {
      $input.val($input.data('last-valid'));
      $input.removeClass('is-invalid is-valid');
    });
  </script>

  <script>
    $('form').on('keydown', function(e) {
      if (e.keyCode === 13) {
        e.preventDefault();
      }
    })
  </script>
<% end %>
