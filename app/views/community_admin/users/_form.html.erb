<style>
  .overlay-container {
    position: relative;
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1;
  }

  .overlay-container a:not(.overlay) {
    position: relative;
    z-index: 2;
  }

  .has-fixed-footer {
    margin-bottom: 70px;
  }

  .fixed-footer {
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 3;
  }
</style>

<div class="container mt-5 has-fixed-footer">
  <div class="row justify-content-md-center">
    <%= form_for [:community_admin, @user],
            html: {class: "col-8"} do |f| %>
      <div class="d-flex flex-nowrap mb-4">
        <div class="flex-grow-1">
          <div class="form-group">
            <%= f.label :first_name %>
            <%= f.text_field :first_name, class: "form-control", required: true %>
          </div>

          <div class="form-group">
            <%= f.label :last_name %>
            <%= f.text_field :last_name, class: "form-control", required: true %>
            <small class="form-text text-muted">Seule l'initiale sera visible publiquement.</small>
          </div>

          <div class="form-group">
            <%= f.label :phone %>
            <%= f.phone_field :phone, class: "form-control", required: true %>
            <small class="form-text text-muted">Uniquement utilisé pour la connexion, jamais visible publiquement.</small>
          </div>

          <div class="form-group">
            <label for="user_email">
              Email
              <small class="text-muted">(facultatif)</small>
            </label>
            <%= f.email_field :email, class: "form-control" %>
          </div>

          <div class="form-group">
            <label>Rôles</label>
            <% CommunityAdminService.readable_roles(current_user).each do |role| %>
              <div class="form-check">
                <input type="checkbox"
                       name="user[roles][]" value="<%= role %>"
                       <%= :checked if @user.roles.include?(role) %>
                       <%= :disabled if !CommunityAdminService.modifiable_roles(by: current_user, of: @user).include?(role) %>
                       class="form-check-input" id="role<%= role.capitalize %>">
                <label class="form-check-label" for="role<%= role.capitalize %>">
                  <%= t "community.#{community.slug}.roles.#{role}" %>
                </label>
              </div>
            <% end %>
          </div>

          <div class="form-group">
            <label for="user_address">
              Adresse
              <small class="text-muted">(facultatif)</small>
            </label>
            <%= text_field_tag nil, @user.address&.display_address, id: :user_address, class: "form-control", data: { last_valid: @user.address&.display_address } %>
            <% [:place_name, :google_place_id, :latitude, :longitude]
                 .each do |attribute| %>
              <%= hidden_field_tag "user[address][#{attribute}]", nil,
                                   disabled: true %>
            <% end %>
          </div>
        </div>
        <div class="ml-4">
          <img class="rounded-circle"
               width="150" height="150"
               src="<%= UserServices::Avatar.new(user: @user).thumbnail_url %>"
               style="display: inline-block; background-image: url('<%= asset_path 'user/default_avatar.png' %>'); background-size: contain; background-color: #fff;"
               alt="">
        </div>
      </div>

      <div class="fixed-footer p-3 bg-light d-flex justify-content-end">
        <a href="<%= cancel_path %>" class="btn btn-outline-secondary mr-3">Annuler</a>
        <button type="submit" class="btn btn-success"><%= confirm %></button>
      </div>

      <% if params.key?(:for_group) %>
        <input type="hidden" name="for_group" value="<%= params[:for_group] %>" />
        <input type="hidden" name="for_role" value="<%= params[:for_role] %>" />
      <% end %>
    <% end %>
  </div>
</div>


<% content_for :scripts do %>
  <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_FRONTEND_API_KEY'] %>&libraries=places&region=fr&language=fr"></script>

  <script>
    var input = document.getElementById('user_address');
    var $input = $(input);
    var options = {
      types: ['address'],
      fields: ['name', 'place_id', 'geometry.location'],
      componentRestrictions: {country: ['fr']}
    };

    autocomplete = new google.maps.places.Autocomplete(input, options);
    autocomplete.addListener('place_changed', function() {
      var place = this.getPlace();

      if (typeof place.place_id === 'undefined') {
        $input.removeClass('is-valid').addClass('is-invalid');
        $input.siblings('input[type=hidden]').prop('disabled', true);
      }
      else {
        $input.data('last-valid', $input.val());
        $input.removeClass('is-invalid').addClass('is-valid');
        $input.siblings('input[type=hidden]').prop('disabled', true);
        var details = {
          place_name: place.name,
          google_place_id: place.place_id,
          latitude: place.geometry.location.lat(),
          longitude: place.geometry.location.lng()
        };
        for (var attribute in details) {
          $input.siblings('input[type=hidden][name*="[' + attribute + ']"]')
            .prop('disabled', false)
            .val(details[attribute]);
        }
      }
    });

    $input.on('blur', function() {
      $input.val($input.data('last-valid'));
      $input.removeClass('is-invalid is-valid');
    });
  </script>

  <script>
    $('form').on('keydown', function(e) {
      if (e.keyCode === 13) {
        e.preventDefault();
      }
    })
  </script>
<% end %>
