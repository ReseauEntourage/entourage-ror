<% layout_options(jquery: :full) %>

<div class="container-m mt-6 mb-2 px-3">
  <div class="text-large mb-2">Créer un nouveau groupe de discussion</div>
  <%= form_tag good_waves_groups_path, method: :post, id: "group-form"  do %>
    <div class="mb-2">
      <%= label_tag :title, "Nom du groupe" %>
      <%= text_field_tag :title, nil, required: true, class: "form-control" %>
    </div>
    <div class="mb-2">
      <label for="group_city">Ville</label>
      <input type="text" id="group_city" class="form-control" required />
      <%= hidden_field_tag 'latitude', nil, disabled: true %>
      <%= hidden_field_tag 'longitude', nil, disabled: true %>
    </div>
    <div class="mb-1">Membres</div>
    <div class="good-waves-members-list" id="members">
      <div class="gw-ml-line mb-1 text-small">
        <div class="gw-ml-name">Prénom</div>
        <div class="gw-ml-phone">Téléphone</div>
        <div class="gw-ml-email">Adresse e-mail (facultatif)</div>
      </div>
      <div class="gw-ml-line mb-1">
        <div class="gw-ml-name"><input type="text" class="form-control" value="<%= UserPresenter.format_first_name(current_user.first_name) %>" readonly></div>
        <div class="gw-ml-phone"><input type="tel" class="form-control" value="<%= Phonelib.parse(current_user.phone).national %>" readonly></div>
        <div class="gw-ml-email"><input type="email" class="form-control" value="<%= current_user.email %>" readonly></div>
      </div>
      <div class="gw-ml-line mb-1 hide" id="member-template">
        <div class="gw-ml-name"><input type="text" name="members[][name]" required disabled class="form-control"></div>
        <div class="gw-ml-phone"><input type="tel" name="members[][phone]" required disabled class="form-control"></div>
        <div class="gw-ml-email"><input type="email" name="members[][email]" disabled class="form-control"></div>
        <div class="gw-ml-delete"><a href="#" data-role="delete-member"><i class="material-icons material-icons-inline">clear</i></a></div>
      </div>
    </div>
    <%
      placeholder = %(
        Prénom, téléphone, e-mail (facultatif)
        Prénom, téléphone, e-mail (facultatif)
        Prénom, téléphone, e-mail (facultatif)
        ...
      ).strip_heredoc.strip
    %>
    <textarea class="form-control mb-1" placeholder="<%= placeholder %>" rows="4" required id="members-raw"></textarea>
    <div class="flex flex-align-center">
      <div class="flex-grow text-small">
        Conseil : Copiez et collez la liste des membres à partir de l'email qui vous a été envoyé par l'équipe Entourage.
      </div>
      <div class="flex-no-shrink ml-2" style="">
        <a href="#" class="btn btn-outline" id="add-members">Ajouter</a>
      </div>
    </div>
    <hr class="mt-1">
    <div class="flex">
      <div class="flex-grow">
        <%= link_to "Voir tous mes groupes", good_waves_groups_path, class: "color-grey" %>
      </div>
      <%= submit_tag "Créer le groupe", class: "btn btn-primary", id: "group-submit" %>
    </div>
  <% end %>
</div>

<% content_for :scripts do %>
  <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_FRONTEND_API_KEY'] %>&libraries=places&region=fr&language=fr"></script>

  <script>
    function generateDisplayAddress(place) {
      var addressFragments = place.formatted_address.split(', ');
      if (place.name !== addressFragments[0]) {
        addressFragments.unshift(place.name);
      }
      if (addressFragments[addressFragments.length - 1] === 'France') {
        addressFragments.pop();
      }
      return addressFragments.join(', ');
    }

    var input = document.getElementById('group_city');
    var $input = $(input);
    var options = {
      types: ['(cities)'],
      fields: ['name', 'geometry.location'],
      componentRestrictions: {country: ['fr']}
    };

    autocomplete = new google.maps.places.Autocomplete(input, options);
    autocomplete.addListener('place_changed', function() {
      var place = this.getPlace();

      if (typeof place.geometry === 'undefined') {
        $input.siblings('input[type=hidden]').prop('disabled', true);
      }
      else {
        $input.data('last-valid', place.name)
        input.setCustomValidity('')
        $input.siblings('input[type=hidden]').prop('disabled', true);
        var details = {
          latitude: place.geometry.location.lat(),
          longitude: place.geometry.location.lng(),
        };
        for (var attribute in details) {
          $input.siblings('input[type=hidden][name=' + attribute + ']')
            .prop('disabled', false)
            .val(details[attribute]);
        }
      }
    });

    $('#group-form').on('submit', function(e) {
      if (typeof $input.data('last-valid') === 'undefined' ||
          $input.val() !== $input.data('last-valid')) {
        input.setCustomValidity("Sélectionnez une ville")
        e.preventDefault()
      }
    })
  </script>

  <script>
    $('#group-form').on('keydown', 'input[type=text]', function(e) {
      if (e.keyCode === 13) {
        e.preventDefault();
      }
    })
  </script>

  <script>
    var $addMembers = $('#add-members'),
        $raw = $('#members-raw'),
        $members = $('#members')

    function validateMemberCount() {
      var memberCount = $('#members').find('.gw-ml-line').length
      $raw.prop('required', memberCount <= 3) // 3: header, current_user, template)
    }

    function addMembers() {
      var data = {
        raw: $raw.val()
      }

      data[$('meta[name="csrf-param"]').prop('content')] = $('meta[name="csrf-token"]').prop('content')

      $.ajax({
        url: '<%= parse_members_good_waves_groups_path %>',
        method: 'POST',
        data: data,
        beforeSend: function() {
          $addMembers.addClass('disabled')
          $raw.prop('readonly', true)
        },
        complete: function() {
          $addMembers.removeClass('disabled')
          $raw.prop('readonly', false)
        },
        error: function() {
        },
        success: function(response) {
          $raw.val(null)
          $.each(response['members'], function(i, member) {
            var $el = $('#member-template').clone().removeClass('hide')
            $el.find('[name="members[][name]"]').val(member.name).prop('disabled', false)
            $el.find('[name="members[][phone]"]').val(member.phone).prop('disabled', false)
            $el.find('[name="members[][email]"]').val(member.email).prop('disabled', false)
            $members.append($el)
          })
          validateMemberCount()
        }
      })
    }

    $addMembers.on('click', function(e) {
      e.preventDefault()
      addMembers()
    })

    $members.on('click', '[data-role="delete-member"]', function(e) {
      e.preventDefault()
      $(this).closest('.gw-ml-line').remove()
      validateMemberCount()
    })

    $('#group-form').on('submit', function(e) {
      if ($raw.val().replace(/\s*/g, '').length > 0) {
        e.preventDefault()
        addMembers()
      }
    })
  </script>
<% end %>
