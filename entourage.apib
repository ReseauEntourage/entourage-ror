FORMAT: 1A
HOST: http://entourage-back-preprod.herokuapp.com

# Entourage
Entourage application backend API documentation.

# Group Map
Map related resources of the **Entourage API**
## Map collection [/map{?token,limit,latitude,longitude,distance}]
A single Note object with all its details
+ Parameters
    + token (required, string, `FAKETOKEN`) ... Token identifying the current user
    + limit (optional, number, `15`) ... Max number of pois to return. 45 if not defined
    + latitude (optional, number, `42`) ... Latitude of middle point of the square (for geolocated results)
    + longitude (optional, number, `2`) ... Latitude of middle point of the square (for geolocated results)
    + distance (optional, number, `1`) ... Half side of the result square (for geolocated results)

### Get all map points [GET]

+ Request
    
    + Headers

            Accept: application/json

+ Response 200 (application/json; charset=utf-8)

    + Body

            {"categories":[{"id":1,"name":"Se nourrir"},{"id":2,"name":"Se loger"},{"id":3,"name":"Se soigner"},{"id":4,"name":"Se rafraîchir"},{"id":5,"name":"S'orienter"},{"id":6,"name":"S'occuper de soi"},{"id":7,"name":"Se réinsérer"},{"id":8,"name":"Test"}],
            "pois":[{"id":1,"name":"CASVP (Centre d'action sociale de la Ville de Paris) - Sous-direction de la solidarité et de la lutte contre l'exclusion","description":"Tél. : 01 44 67 18 34 ou 01 44 67 18 28. Fax : 01 44 67 18 71","longitude":2.3696595,"latitude":48.845401,"adress":"5, boulevard Diderot, 75012","phone":"01 44 67 18 34","website":"","email":"","audience":"","category_id":1}]}
            
+ Response 401 (application/json; charset=utf-8)

        {"error":{"status":401,"message":"Please sign-in"}}

# Group Encounters
Encounters related resources of the **Entourage API**
## Encounters collection [/encounters{?token}]
+ Parameters
    + token (required, string, `FAKETOKEN`) ... Token identifying the current user

### Create an Encounter [POST]
+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

            {"encounter":{"street_person_name":"jean","date":"2014-10-11 15:19:45","latitude":42,"longitude":2,"message":"test","voice_message":"http://www.google.com"}}

+ Response 201 (application/json; charset=utf-8)

        {"encounter":{"id":1,"date":"2014-10-11T15:19:45.000+02:00","latitude":42.0,"longitude":2.0,"user_id":1,"user_name":"Eric","street_person_name":"jean","message":"test","voice_message":"http://www.google.com"}}
        
+ Response 400 (application/json; charset=utf-8)

        {"error":{"status":400,"message":"Could not create encouter","reasons":["Date can't be blank","Street person name can't be blank","Latitude can't be blank","Latitude is not a number","Longitude can't be blank","Longitude is not a number"]}}

+ Response 401 (application/json; charset=utf-8)

        {"error":{"status":401,"message":"Please sign-in"}}

# Group POIs
POI related resources of the **Entourage API**
## Pois collection [/pois{?token}]
+ Parameters
    + token (required, string, `FAKETOKEN`) ... Token identifying the current user

### List all POIs [GET]
    
+ Request

    + Headers

            Accept: application/json

+ Response 200 (application/json; charset=utf-8)

        {"categories":[{"id":1,"name":"Se nourrir"},{"id":2,"name":"Se loger"},{"id":3,"name":"Se soigner"},{"id":4,"name":"Se rafraîchir"},{"id":5,"name":"S'orienter"},{"id":6,"name":"S'occuper de soi"},{"id":7,"name":"Se réinsérer"},{"id":8,"name":"Test"}],
        "pois":[{"id":1,"name":"CASVP (Centre d'action sociale de la Ville de Paris) - Sous-direction de la solidarité et de la lutte contre l'exclusion","description":"Tél. : 01 44 67 18 34 ou 01 44 67 18 28. Fax : 01 44 67 18 71","longitude":2.3696595,"latitude":48.845401,"adress":"5, boulevard Diderot, 75012","phone":"01 44 67 18 34","website":"","email":"","audience":"","category_id":1},{"id":2,"name":"Comité médical pour les exilés (COMEDE)","description":"• Centre de santé Hôpital Bicêtre","longitude":2.3405129,"latitude":48.8725447,"adress":"78, rue du Général-Leclerc, 94270 Le Kremlin-Bicêtre","phone":"","website":"","email":"contact@comede.org","audience":"","category_id":3},{"id":3,"name":"SSDP","description":"Mairie du 1er arr. M° Louvre. Services sociaux départementaux polyvalents (SSDP) : Ouverture du lundi au vendredi 9h-17h. ","longitude":2.3412674,"latitude":48.8600425,"adress":"4, place du Louvre, 75001","phone":"01 44 50 76 40","website":"","email":"","audience":"","category_id":5}]}

+ Response 401 (application/json; charset=utf-8)

        {"error":{"status":401,"message":"Please sign-in"}}

# Group Users
Users related resources of the **Entourage API**
## Users collection [/users]
Users resources access is restricted by basic authentication. 

### Retrieve all users [GET]

+ Request (application/json)

    + Header
            
            Accept: application/json
            Authorization: ADMINBASICAUTH

+ Response 200 (application/json; charset=utf-8)

        {"users":[{"id":1,"email":"dredd@test.com","first_name":"Judge","last_name":"Dredd"},{"id":2,"email":"johnsmith@test.com","first_name":"John","last_name":"Smith"}]}
        
+ Response 401 (application/json; charset=utf-8)

        {"error":{"status":401,"message":"Please sign-in"}}

### Create a user [POST]

+ Request (application/json)

    + Header
            
            Accept: application/json
            Authorization: ADMINBASICAUTH

    + Body

            {"user":{"email":"johnsmith@test.com","first_name":"John","last_name":"Smith"}}

+ Response 201 (application/json; charset=utf-8)

        {"user":{"id":10,"email":"johnsmith@test.com","first_name":"John","last_name":"Smith"}}
        
+ Response 401 (application/json; charset=utf-8)

        {"error":{"status":401,"message":"Please sign-in"}}

## User [/users/{id}]

+ Parameters
    + id (required, string, `2`) ... Id of the user

### Update user [PUT]

+ Request (application/json; charset=utf-8)

    + Header
            
            Accept: application/json
            Authorization: ADMINBASICAUTH

    + Body

            {"user":{"email":"johnsmith2@test.com","first_name":"Johnny","last_name":"Smit"}}

+ Response 200 (application/json; charset=utf-8)

        {"user":{"id":2,"email":"johnsmith2@test.com","first_name":"Johnny","last_name":"Smit"}}

### Delete user [DELETE]

+ Request (application/x-www-form-urlencoded; charset=utf-8)

    + Header
            
            Accept: application/json
            Authorization: ADMINBASICAUTH

+ Response 204


## User login [/login]
### Login user [POST]
+ Request (application/x-www-form-urlencoded; charset=utf-8)

    + Header
            
            Accept: application/json
    
    + Body
    
            email=dredd@test.com

+ Response 200 (application/json; charset=utf-8)

        {"user":{"id":1,"email":"dredd@test.com","first_name":"Judge","last_name":"Dredd","token":"FAKETOKEN"}}

+ Response 400 (application/json; charset=utf-8)

        {"error":{"status":400,"message":"Login failed"}}

# Group Newsletter
Newsletter subscription related resources of the **Entourage API**

## Newsletter actions [/newsletter_subscriptions]
### Create new subscription [POST]
If the email is already registered to newsletter subscription, a 400 error is returned.
+ Request (application/json)

    + Header
            
            Accept: application/json  

    + Body

            {"newsletter_subscription":{"email":"newslette@subscription.com","active":true}}

+ Response 201 (application/json; charset=utf-8)
        
        {"newsletter_subscription":{"email":"newslette@subscription.com","active":true}}

+ Response 400 (application/json; charset=utf-8)

        {"error":{"status":400,"message":"Could not create entity","reasons":["Email already exists"]}}

# Group Tours
Tours, or "maraude", are definied only by their type (attribute tour_type).

tour_type should be within ["social", "other", "food"]
status is either "ongoing" or "closed"

## Tours collection [/tours{?token}]
+ Parameters
    + token (required, string, `FAKETOKEN`) ... Token identifying the current user
    + limit (optional, number, `15`) ... Max number of tours to return. 10 if not defined
    + type (optional, string, `friendly`) ... Type of tours to filter. None by default

### Retrieve all tours [GET]
+ Request (application/json)

    + Header
            
            Accept: application/json

+ Response 200 (application/json; charset=utf-8)

        {"tours":[{"id":10,"type":"social","tour_points":[],"status":"ongoing"}]}
        
+ Response 401 (application/json; charset=utf-8)

        {"error":{"status":401,"message":"Please sign-in"}}


### Create a tour [POST]
+ Request (application/json)

    + Header
            
            Accept: application/json

    + Body

            {"tour":{"tour_type":"social", "status":"ongoing"}}

+ Response 201 (application/json; charset=utf-8)

        {"tour":{"id":10,"type":"social","tour_points":[]}}
        
+ Response 400 (application/json; charset=utf-8)

        {"error":{"status":400,"message":"Could not create tour","reasons":["Tour type is not included in the list"]}}

+ Response 401 (application/json; charset=utf-8)

        {"error":{"status":401,"message":"Please sign-in"}}

## Tour [/tours/{id}{?token}]
+ Parameters
    + id (required, integer, `1`) ... Identifier of the tour to be retrieved
    + token (required, string, `FAKETOKEN`) ... Token identifying the current user

### Retrieve a tour [GET]
+ Request (application/json)

    + Header
            
            Accept: application/json

+ Response 200 (application/json; charset=utf-8)

        {"tour":{"id":1,"type":"social","status":"ongoing","tour_points":[{"latitude":1.5,"longitude":1.5,"passing_time":"2015-07-07T10:31:43.000+02:00"}]}}
        
+ Response 404 (application/json; charset=utf-8)

        {"error":{"status":404,"message":"Could not find tour with id 233232"}}

+ Response 401 (application/json; charset=utf-8)

        {"error":{"status":401,"message":"Please sign-in"}}

### Update a tour [PUT]
+ Request (application/json)

    + Header
            
            Accept: application/json

    + Body

            {"tour":{"tour_type":"social", "status":"closed"}}


+ Response 200 (application/json; charset=utf-8)

        {"tour":{"id":1,"type":"social","status":"closed","tour_points":[{"latitude":1.5,"longitude":1.5,"passing_time":"2015-07-07T10:31:43.000+02:00"}]}}
        
+ Response 404 (application/json; charset=utf-8)

        {"error":{"status":404,"message":"Could not find tour with id 233232"}}

+ Response 401 (application/json; charset=utf-8)

        {"error":{"status":401,"message":"Please sign-in"}}


# Group Tour Points
Tour points describe the tour itinerary
## Tour Points collection [/tours/{tour_id}/tour_points{?token}]

+ Parameters
    + tour_id (required, integer, `1`) ... Identifier of the tour related to the point
    + token (required, string, `FAKETOKEN`) ... Token identifying the current user

### Create a tour point [POST]
+ Request (application/json)

    + Header
            
            Accept: application/json
    + Body

            {"tour_point":{"latitude":1.5,"longitude":1.5,"passing_time":"2015-07-07T10:31:43.000+02:00"}}

+ Response 201 (application/json; charset=utf-8)

        {"tour":{"id":1,"type":"social","tour_points":[{"latitude":1.5,"longitude":1.5,"passing_time":"2015-07-07T10:31:43.000+02:00"}]}}
        
+ Response 400 (application/json; charset=utf-8)

        {"error":{"status":400,"message":"Could not create tour point","reasons":["Longitude is not a number"]}}

+ Response 401 (application/json; charset=utf-8)

        {"error":{"status":401,"message":"Please sign-in"}}

+ Response 404 (application/json; charset=utf-8)

        {"error":{"status":404,"message":"Could not find tour with id 233232"}}

# Group Tour Encounters
Encounters occured during tour
## Tour Encounters collection [/tours/{tour_id}/encounters{?token}]

+ Parameters
    + tour_id (required, integer, `1`) ... Identifier of the tour related to the point
    + token (required, string, `FAKETOKEN`) ... Token identifying the current user

### Create an encounter [POST]
+ Request (application/json)

    + Header
            
            Accept: application/json

    + Body

            {"encounter":{"street_person_name":"jean","date":"2014-10-11 15:19:45","latitude":42,"longitude":2,"message":"test","voice_message":"http://www.google.com"}}

+ Response 201 (application/json; charset=utf-8)
    
    + Body

            {"encounter":{"id":1,"date":"2014-10-11T15:19:45.000+02:00","latitude":42.0,"longitude":2.0,"user_id":1,"user_name":"Eric","street_person_name":"jean","message":"test","voice_message":"http://www.google.com"}}

+ Request (application/json)

    + Header
            
            Accept: application/json

    + Body

            {"encounter":{"date":"2014-10-11 15:19:45","latitude":42,"longitude":2,"message":"test","voice_message":"http://www.google.com"}}
        
+ Response 400 (application/json; charset=utf-8)

        {"error":{"status":400,"message":"Could not create encouter","reasons":["Street person name can't be blank"]}}

+ Request (application/json)

    + Header
            
            Accept: application/json

    + Body

            {"encounter":{"wrong_key":"wrong_value"}}

+ Response 400 (application/json; charset=utf-8)
    
    + Body
    
            {"error":{"status":400,"message":"Could not create encouter","reasons":["Date can't be blank","Street person name can't be blank","Latitude can't be blank","Latitude is not a number","Longitude can't be blank","Longitude is not a number"]}}

+ Response 401 (application/json; charset=utf-8)
    
    + Body

            {"error":{"status":401,"message":"Please sign-in"}}

+ Response 404 (application/json; charset=utf-8)

    + Parameters

        tour_id = 233232

    + Body

            {"error":{"status":404,"message":"Could not find tour with id 233232"}}
